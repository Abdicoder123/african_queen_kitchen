name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: postgres:14  # Ensure you're using the PostgreSQL version you need
        options: --health-cmd "pg_isready" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: african_queen_kitchen_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Wait for PostgreSQL
        run: |
          for i in {1..20}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready";
              exit 0;
            fi
            echo "Waiting for PostgreSQL...";
            sleep 3;
          done;
          echo "PostgreSQL did not become ready in time!";
          exit 1;
        env:
          PGPASSWORD: postgres

      - name: Test PostgreSQL connection
        run: |
          psql -h localhost -U postgres -d african_queen_kitchen_test -c "\l"
        env:
          PGPASSWORD: postgres

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/african_queen_kitchen_test
        run: |
          bin/rails db:migrate
          bin/rails db:test:prepare
          bin/rails test


      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
